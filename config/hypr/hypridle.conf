
#  ██╗  ██╗██╗   ██╗██████╗ ██╗██████╗ ██╗     ███████╗
#  ██║  ██║╚██╗ ██╔╝██╔══██╗██║██╔══██╗██║     ██╔════╝
#  ███████║ ╚████╔╝ ██████╔╝██║██║  ██║██║     █████╗  
#  ██╔══██║  ╚██╔╝  ██╔═══╝ ██║██║  ██║██║     ██╔══╝  
#  ██║  ██║   ██║   ██║     ██║██████╔╝███████╗███████╗
#  ╚═╝  ╚═╝   ╚═╝   ╚═╝     ╚═╝╚═════╝ ╚══════╝╚══════╝
#                                                      

general {
    # lock_cmd = notify-send "lock!"          # dbus/sysd lock command (loginctl lock-session) 
    # unlock_cmd = notify-send "unlock!"      # same as above, but unlock
    # before_sleep_cmd = notify-send "Zzz"    # command ran before sleep
    # after_sleep_cmd = notify-send "Awake!"  # command ran after sleep
    ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
}

# Warn
listener {
    timeout = 540                            # 9 min
    on-timeout = notify-send "You are idle!" # command to run when timeout has passed
    on-resume = notify-send "Locking aborted!"  # command to run when activity is detected after timeout has fired.
}

# Screenlock
listener {
    timeout = 600                     # 10 min
    on-timeout = hyprlock # command to run when timeout has passed
    # on-resume = notify-send "Welcome back to your desktop!"  # command to run when activity is detected after timeout has fired.
}

# Suspend
listener {
    timeout = 1200                            # 20 min
    on-timeout = systemctl suspend # command to run when timeout has passed
    # on-resume = notify-send "Welcome back to your desktop!"  # command to run when activity is detected after timeout has fired.
}
